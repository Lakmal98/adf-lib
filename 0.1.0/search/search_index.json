{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#atlassian-document-format-adf-python-library","title":"Atlassian Document Format (ADF) Python Library","text":"<p>ADF Library is a Python package for creating and manipulating ADF (Atlassian Document Format) documents. It provides a clean, type-safe API for building structured documents with support for headings, paragraphs, tables, and rich text formatting.</p> <p>For more information, see the ADF Builder (Official) Documentation.</p>"},{"location":"1.%20Getting%20Started/Installation/","title":"Installation Guide","text":""},{"location":"1.%20Getting%20Started/Installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing the ADF Library, ensure your system meets the following requirements:</p>"},{"location":"1.%20Getting%20Started/Installation/#python-environment","title":"Python Environment","text":"<ul> <li>Python (3.8 or higher recommended)</li> <li>pip package manager</li> </ul>"},{"location":"1.%20Getting%20Started/Installation/#installation-methods","title":"Installation Methods","text":""},{"location":"1.%20Getting%20Started/Installation/#method-1-using-pip-recommended","title":"Method 1: Using pip (Recommended)","text":"<pre><code>pip install adf_lib\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#method-2-from-source","title":"Method 2: From Source","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/username/adf_lib.git\n</code></pre> <ol> <li>Navigate to the directory:</li> </ol> <pre><code>cd adf_lib\n</code></pre> <ol> <li>Install using pip:</li> </ol> <pre><code>pip install .\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#verification","title":"Verification","text":"<p>Verify the installation by checking the version:</p> <pre><code>pip show adf_lib\n</code></pre> <p>Or in Python:</p> <pre><code>import adf_lib\nprint(adf_lib.__version__)\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#upgrading","title":"Upgrading","text":"<p>To upgrade to the latest version:</p> <pre><code>pip install --upgrade adf_lib\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#uninstallation","title":"Uninstallation","text":"<p>To remove the package:</p> <pre><code>pip uninstall adf_lib\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#troubleshooting-common-installation-issues","title":"Troubleshooting Common Installation Issues","text":""},{"location":"1.%20Getting%20Started/Installation/#permission-errors","title":"Permission Errors","text":"<p>If you encounter permission errors:</p> <pre><code># Windows (Run as Administrator)\npip install adf_lib --user\n\n# Linux/macOS\nsudo pip install adf_lib\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#ssl-certificate-errors","title":"SSL Certificate Errors","text":"<p>If you face SSL certificate issues:</p> <pre><code>pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org adf_lib\n</code></pre>"},{"location":"1.%20Getting%20Started/Installation/#package-conflicts","title":"Package Conflicts","text":"<p>If you experience dependency conflicts:</p> <pre><code>pip install adf_lib --ignore-installed\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/","title":"Quick Start","text":""},{"location":"1.%20Getting%20Started/Quick%20Start/#basic-usage","title":"Basic Usage","text":"<p>The ADF Library provides a simple way to create and manipulate documents programmatically. Here's how to get started:</p>"},{"location":"1.%20Getting%20Started/Quick%20Start/#importing-required-components","title":"Importing Required Components","text":"<pre><code>from adf_lib import ADF, Text, Table, Link\nfrom adf_lib.constants.enums import HeadingLevel\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#creating-documents","title":"Creating Documents","text":""},{"location":"1.%20Getting%20Started/Quick%20Start/#initialize-a-new-document","title":"Initialize a New Document","text":"<pre><code>doc = ADF()\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#adding-basic-elements","title":"Adding Basic Elements","text":""},{"location":"1.%20Getting%20Started/Quick%20Start/#headings","title":"Headings","text":"<pre><code># Add a top-level heading (H1)\ndoc.add(Text(\"My Document\").heading(HeadingLevel.H1))\n\n# Other heading levels\ndoc.add(Text(\"Section\").heading(HeadingLevel.H2))\ndoc.add(Text(\"Subsection\").heading(HeadingLevel.H3))\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#formatted-text","title":"Formatted Text","text":"<pre><code># Basic paragraph\ndoc.add(Text(\"Simple paragraph\").paragraph())\n\n# Formatted paragraph with multiple styles\ndoc.add(Text(\"This is a formatted paragraph\", \"strong\", \"em\").paragraph())\n\n# Individual formatting options\ndoc.add(Text(\"Bold text\", \"strong\").paragraph())\ndoc.add(Text(\"Italic text\", \"em\").paragraph())\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#document-manipulation","title":"Document Manipulation","text":""},{"location":"1.%20Getting%20Started/Quick%20Start/#exporting-documents","title":"Exporting Documents","text":"<pre><code># Export as dictionary\nadf_dict = doc.to_dict()\n\n# Export as JSON (if supported)\nadf_json = doc.to_json()\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#common-patterns","title":"Common Patterns","text":""},{"location":"1.%20Getting%20Started/Quick%20Start/#combining-elements","title":"Combining Elements","text":"<pre><code># Create a document with multiple elements\ndoc = ADF()\ndoc.add(Text(\"Report Title\").heading(HeadingLevel.H1))\ndoc.add(Text(\"Introduction\").heading(HeadingLevel.H2))\ndoc.add(Text(\"This is the introduction text.\").paragraph())\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#working-with-links","title":"Working with Links","text":"<pre><code># Adding a link\ndoc.add(Link(\"Visit our website\", \"https://example.com\"))\n\n# Link within formatted text\ndoc.add(Text(\"Click \").append(Link(\"here\", \"https://example.com\")).append(\" for more info\").paragraph())\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#working-with-tables","title":"Working with Tables","text":"<pre><code># Create a simple table\ntable = Table()\ntable.addRow([\"Header 1\", \"Header 2\"])\ntable.addRow([\"Data 1\", \"Data 2\"])\ndoc.add(table)\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#best-practices","title":"Best Practices","text":"<ol> <li>Document Structure</li> <li>Start with a clear heading hierarchy</li> <li>Use consistent formatting throughout</li> <li> <p>Group related content under appropriate headings</p> </li> <li> <p>Performance</p> </li> <li>Build documents incrementally</li> <li>Use batch operations when possible</li> <li> <p>Export only when necessary</p> </li> <li> <p>Error Handling</p> </li> </ol> <pre><code>try:\n    doc.add(Text(\"Content\").heading(HeadingLevel.H1))\nexcept Exception as e:\n    print(f\"Error adding content: {e}\")\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"1.%20Getting%20Started/Quick%20Start/#issue-invalid-formatting","title":"Issue: Invalid Formatting","text":"<pre><code># Incorrect\ndoc.add(Text(\"Text\", \"invalid_style\"))  # Will raise an error\n\n# Correct\ndoc.add(Text(\"Text\", \"strong\"))  # Uses valid style\n</code></pre>"},{"location":"1.%20Getting%20Started/Quick%20Start/#issue-heading-levels","title":"Issue: Heading Levels","text":"<pre><code># Valid heading levels\nfor level in HeadingLevel:\n    doc.add(Text(f\"Heading {level}\").heading(level))\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/","title":"Document Structure","text":""},{"location":"2.%20Core%20Components/Document%20Structure/#document-structure","title":"Document Structure","text":"<p>The ADF document is composed of various content types organized in a hierarchical structure:</p> <pre><code>{\n    \"version\": 1,\n    \"type\": \"doc\",\n    \"content\": [\n        # Content elements go here\n    ]\n}\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#content-types","title":"Content Types","text":"<p>The library supports the following content types:</p> <pre><code>class ContentType(Enum):\n    TEXT = \"text\"\n    TABLE = \"table\"\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#text-types","title":"Text Types","text":"<p>Text content can be formatted as:</p> <pre><code>class TextType(Enum):\n    HEADING = \"heading\"\n    PARAGRAPH = \"paragraph\"\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#detailed-api-reference","title":"Detailed API Reference","text":""},{"location":"2.%20Core%20Components/Document%20Structure/#adf-class","title":"ADF Class","text":"<p>The main document class that serves as a container for all content.</p> <pre><code>class ADF:\n    def __init__(self, version: int = 1, type: str = \"doc\")\n    def add(self, content: dict) -&gt; None\n    def to_dict(self) -&gt; dict\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#parameters","title":"Parameters:","text":"<ul> <li><code>version</code>: Document version (default: 1)</li> <li><code>type</code>: Document type (default: \"doc\")</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#methods","title":"Methods:","text":"<ul> <li><code>add(content)</code>: Adds a content element to the document</li> <li><code>to_dict()</code>: Converts the document to a dictionary format</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#text-class","title":"Text Class","text":"<p>Handles text content with formatting.</p> <pre><code>class Text:\n    def __init__(self, text: str, *marks: Union[str, dict])\n    def heading(self, level: Union[int, HeadingLevel] = HeadingLevel.H1,\n                local_id: Optional[str] = None) -&gt; dict\n    def paragraph(self, local_id: Optional[str] = None) -&gt; dict\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#parameters_1","title":"Parameters:","text":"<ul> <li><code>text</code>: The text content</li> <li><code>marks</code>: Optional formatting marks</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#methods_1","title":"Methods:","text":"<ul> <li><code>heading()</code>: Creates a heading element</li> <li><code>paragraph()</code>: Creates a paragraph element</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#table-class","title":"Table Class","text":"<p>Handles table creation and manipulation.</p> <pre><code>class Table:\n    def __init__(\n        self,\n        width: int,\n        is_number_column_enabled: bool = False,\n        layout: Union[str, TableLayout] = TableLayout.CENTER,\n        display_mode: Union[str, TableDisplayMode] = TableDisplayMode.DEFAULT\n    )\n    def header(self, content: List[dict], col_span: int = 1,\n               row_span: int = 1) -&gt; dict\n    def cell(self, content: List[dict], col_span: int = 1,\n             row_span: int = 1) -&gt; dict\n    def add_row(self, cells: List[dict]) -&gt; None\n    def to_dict(self) -&gt; dict\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#parameters_2","title":"Parameters:","text":"<ul> <li><code>width</code>: Table width (percentage)</li> <li><code>is_number_column_enabled</code>: Enable numbered columns</li> <li><code>layout</code>: Table layout style</li> <li><code>display_mode</code>: Display mode</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#methods_2","title":"Methods:","text":"<ul> <li><code>header()</code>: Creates a header cell</li> <li><code>cell()</code>: Creates a regular cell</li> <li><code>add_row()</code>: Adds a row to the table</li> <li><code>to_dict()</code>: Converts table to dictionary format</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#link-class","title":"Link Class","text":"<p>Handles hyperlinks in the document.</p> <pre><code>@dataclass\nclass Link:\n    href: str\n    title: Optional[str] = None\n    collection: Optional[str] = None\n    id: Optional[str] = None\n    occurrence_key: Optional[str] = None\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#methods_3","title":"Methods:","text":"<ul> <li><code>to_mark()</code>: Converts link to mark format</li> </ul>"},{"location":"2.%20Core%20Components/Document%20Structure/#text-formatting","title":"Text Formatting","text":"<p>The library supports various text formatting options through the <code>MarkType</code> enum:</p> <pre><code>class MarkType(Enum):\n    CODE = \"code\"          # Code formatting\n    EM = \"em\"             # Emphasis (italic)\n    LINK = \"link\"         # Hyperlink\n    STRIKE = \"strike\"     # Strikethrough\n    STRONG = \"strong\"     # Bold\n    SUBSUP = \"subsup\"     # Subscript/Superscript\n    UNDERLINE = \"underline\"  # Underline\n    TEXT_COLOR = \"textColor\"  # Text color\n</code></pre>"},{"location":"2.%20Core%20Components/Document%20Structure/#tables","title":"Tables","text":"<p>Tables can be configured with different layouts and display modes:</p> <pre><code>class TableLayout(Enum):\n    CENTER = \"center\"\n    ALIGN_START = \"align-start\"\n\nclass TableDisplayMode(Enum):\n    DEFAULT = \"default\"\n    FIXED = \"fixed\"\n</code></pre>"},{"location":"3.%20Examples/Examples/","title":"Examples","text":""},{"location":"3.%20Examples/Examples/#creating-a-document-with-multiple-elements","title":"Creating a Document with Multiple Elements","text":"<pre><code>from adf_lib import ADF, Text, Table, Link\nfrom adf_lib.constants.enums import HeadingLevel, TableLayout\n\n# Create document\ndoc = ADF()\n\n# Add heading\ndoc.add(Text(\"Project Report\").heading(HeadingLevel.H1))\n\n# Add paragraph with formatting\ndoc.add(Text(\"Executive Summary\", \"strong\").paragraph())\n\n# Add link\nlink = Link(href=\"https://example.com\", title=\"More Info\")\ndoc.add(Text(\"See details here\", link.to_mark()).paragraph())\n\n# Create table\ntable = Table(\n    width=100,\n    is_number_column_enabled=True,\n    layout=TableLayout.CENTER\n)\n\n# Add table header\ntable.add_row([\n    table.header([Text(\"Category\").paragraph()]),\n    table.header([Text(\"Value\").paragraph()])\n])\n\n# Add table data\ntable.add_row([\n    table.cell([Text(\"Revenue\").paragraph()]),\n    table.cell([Text(\"$100,000\").paragraph()])\n])\n\n# Add table to document\ndoc.add(table.to_dict())\n\n# Convert to dictionary\nresult = doc.to_dict()\n</code></pre>"},{"location":"3.%20Examples/Examples/#advanced-text-formatting","title":"Advanced Text Formatting","text":"<pre><code># Multiple formatting marks\ndoc.add(Text(\"Important Notice\", \"strong\", \"underline\").paragraph())\n\n# Colored text\ndoc.add(Text(\"Warning\", {\"type\": \"textColor\", \"attrs\": {\"color\": \"#FF0000\"}}).paragraph())\n\n# Combined formatting\ndoc.add(Text(\"Critical Update\", \"strong\", \"em\", {\"type\": \"textColor\", \"attrs\": {\"color\": \"#FF0000\"}}).paragraph())\n</code></pre>"},{"location":"4.%20Contribution/CODE_OF_CONDUCT/","title":"Code of Conduct","text":"<p>We are committed to providing a friendly, welcoming, and inclusive environment for all contributors to this project. By participating in this project, you agree to abide by this code of conduct.</p>"},{"location":"4.%20Contribution/CODE_OF_CONDUCT/#how-to-contribute","title":"How to Contribute","text":"<p>We appreciate your contributions! To help you get started, here are the steps you can follow:</p> <ol> <li> <p>Fork the repository    Fork the repository to your personal GitHub account to make changes.</p> </li> <li> <p>Create a new branch    Always create a new branch for your work, whether you're fixing a bug, adding a new feature, or updating documentation.</p> </li> <li> <p>Make your changes    Implement your changes, keeping the code clean, well-organized, and following any existing patterns and style guidelines.</p> </li> <li> <p>Commit your changes    Write clear, concise commit messages that describe what you've done. Use the present tense (e.g., \"Fix bug\" rather than \"Fixed bug\").</p> </li> <li> <p>Push your changes to your fork    Push the changes to your personal fork on GitHub.</p> </li> <li> <p>Create a pull request    Once you're ready, open a pull request to propose your changes. Make sure your pull request follows the guidelines below:</p> </li> <li> <p>Write tests: Add relevant unit tests to cover your changes. Unit tests are an essential part of our process and help ensure stability and correctness.</p> </li> <li> <p>Do developer testing: Before submitting your pull request, thoroughly test your changes in the development environment.</p> </li> <li> <p>Update documentation: If your changes affect functionality or introduce new features, please update the documentation accordingly to reflect those changes.</p> </li> </ol>"},{"location":"4.%20Contribution/CODE_OF_CONDUCT/#additional-guidelines","title":"Additional Guidelines","text":"<ul> <li> <p>Respect others: Treat all participants with kindness, respect, and empathy. We foster a collaborative and inclusive community.</p> </li> <li> <p>Be open to feedback: Code reviews are a valuable process for improving the quality of the project. Be open to suggestions and critique.</p> </li> <li> <p>No harassment: Harassment, offensive behavior, and discrimination are not tolerated. If you witness or experience inappropriate conduct, please report it immediately.</p> </li> </ul> <p>By following these guidelines, we can maintain a productive and positive environment for all contributors.</p> <p>Thank you for contributing to our project!</p>"},{"location":"4.%20Contribution/Contribution/","title":"Contributions are Welcome","text":"<p>We welcome contributions to the project. Please follow the guidelines below to contribute.</p>"},{"location":"4.%20Contribution/Contribution/#how-to-contribute-code-of-conduct","title":"How to Contribute &amp; Code of Conduct","text":"<p>Please read our Code of Conduct before contributing.</p>"},{"location":"4.%20Contribution/Contribution/#license","title":"License","text":"<p>By contributing, you agree that your contributions will be licensed under the MIT License.</p>"},{"location":"4.%20Contribution/Contribution/#contributors","title":"Contributors","text":"<p>We appreciate all contributions. A big thank you to all our contributors!</p>"},{"location":"4.%20Contribution/Contribution/#issues","title":"Issues","text":"<p>If you encounter any issues, please create an issue in the repository.</p> <p>Create an Issue</p>"},{"location":"4.%20Contribution/Contribution/#documentation","title":"Documentation","text":"<p>Please refer to the documentation for more information.</p>"}]}